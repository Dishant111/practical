@model PaginationResult<TokenListModel>

@{
    ViewData["Title"] = "Index";

    var totalPages = (int)Math.Ceiling((decimal)Model.TotalCount / Model.Pagesize);
}
@functions {
    public string GetRowClass(CustoomerToken.Domain.Tokens.QueryStatus status)
    {
        if (status == CustoomerToken.Domain.Tokens.QueryStatus.Processing)
            return "table-warning";
        if (status == CustoomerToken.Domain.Tokens.QueryStatus.Resolved)
            return "table-success";
        return "table-primary";
    }

    public IDictionary<string, string> GetPaginationKeyValuePair(int pageNo, int pageSize)
    {
        var a = new Dictionary<string, string>() { };
        a.Add("PageNo", (pageNo).ToString());
        a.Add("PageSize", (pageSize).ToString());

        return a;
    }
}

<h2>Index</h2>

<p>
    <a role="button" class="btn btn-outline-primary" asp-action="Create" asp-controller="Token"><i class="bi bi-plus-square me-2"></i>Create New Query</a>
</p>

<div class="">
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">
                    Id
                </th>
                <th scope="col">
                    Query Type
                </th>
                <th scope="col">
                    Query Status
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.Data)
            {
                <tr class="@(GetRowClass(item.Status))">
                    <th scope="row">@item.Id.ToString("D3")</th>
                    <td>@item.Query</td>
                    <td>@item.Status</td>
                </tr>
            }
        </tbody>

    </table>


    <div class="h-100 d-flex align-items-center justify-content-center">
        <ul class="pagination">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-controller="Token" asp-all-route-data="GetPaginationKeyValuePair(Model.PageNumber-1,Model.Pagesize)">&laquo;</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link">&laquo;</a>
                </li>
            }

            @if (Model.PageNumber - 2 > 1)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }

            @foreach (var item in Enumerable.Range(Model.PageNumber - 2, 5))
            {
                if (item > 0 && item <= totalPages)
                {
                    if (Model.PageNumber == item)
                    {
                        <li class="page-item active">
                            <a class="page-link" @* asp-action="Index" asp-controller="Token" asp-all-route-data="GetPaginationKeyValuePair(item,Model.Pagesize)" *@>@item</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-controller="Token" asp-all-route-data="GetPaginationKeyValuePair(item,Model.Pagesize)">@item</a>
                        </li>
                    }
                }
            }

            @if (Model.PageNumber + 2 < totalPages)
            {
                <li class="page-item disabled">
                    <a class="page-link">...</a>
                </li>
            }

            @if (Model.PageNumber >= totalPages)
            {
                <li class="page-item disabled">
                    <a class="page-link">&raquo;</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-controller="Token" asp-all-route-data="GetPaginationKeyValuePair(Model.PageNumber+1,Model.Pagesize)">&raquo;</a>
                </li>
            }
        </ul>
    </div>
</div>

